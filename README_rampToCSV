##########################


Ramp Sequence Harmonic Mean RSCU CSV generator
rampToCSV.py
Created by: Matt Hodgman
Emails: matthodg@byu.edu


##########################


Purpose: To create a CSV with the harmonic mean RSCU value of each ramp sequence, entire gene with a ramp sequence, ramp sequence length, and gene length. 


##########################


ARGUMENT OPTIONS:

        -h      --help          show this help message and exit
        -e      --efficiencies  Input FASTA Files of codon translation efficiencies as RSCU values
        -o      --output        Output Directory
        -k      --keyfile       Sample to Population Key CSV File
        -r      --ramps         Input FASTA Files containing the ramp sequences
        -c      --chart         output CSV only contains Gene Harmonic Mean RSCU, Ramp Harmonic Mean RSCU, Gene Length, Ramp Length

##########################


REQUIREMENTS:

rampToCSV.py uses Python version 3.7

Python libraries that must be installed include:
1. csv
2. argparse
3. pandas
4. statistics

If any of those libraries is not currently in your Python Path, use the following command:
pip install --user [library_name]
to install the library to your path.


##########################


Input Files:
This program requires one or more FASTA files that contain the translation efficiency for each codon in every gene as well as the ramp sequences themselves (output of Miller et al. 2019 ExtRamp.py).

Output Files:
Output files will be written to the same directory as rampToCSV.py or the provided output directory argument. Files begin with the name of the sample followed by "_ramp.csv" or "_ramp_chart.csv" depending on if the -c argument is passed.


##########################


USAGE:
The -e and -r arguments are required followed by their respective files. The -k argument is also required followed by the file name and path of the population key file in order to correctly identify the population to which the sample belongs.
It is crucial that the name of the ramp and efficiency files begin with the same sample same. 

By default, the outputted ramp sequence and translation efficiency FASTA files generated by Miller et al. 2019 ExtRamp.py are expected.

Example usage:
python3 rampToCSV.py -e ramps_efficiency/* -r ramps_hg19/* -c -o ramp_charts/


##########################

